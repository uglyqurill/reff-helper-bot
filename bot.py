import os
from dotenv import load_dotenv
import telebot

from crossref_client import fetch_metadata_by_doi, CrossrefError
from formatter import format_book, format_article, format_electronic, format_chapter

# 1) –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
print("Loaded BOT_TOKEN:", BOT_TOKEN)

# 2) –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)
bot.remove_webhook()


# 3) –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è /start –∏ /help
@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    text = (
        "–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî ReffHelperBot. ü§ñ\n\n"
        "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ DOI (–Ω–∞–ø—Ä–∏–º–µ—Ä, `10.1038/nphys1170`),\n"
        "–∏ —è –≤–µ—Ä–Ω—É –±–∏–±–ª–∏–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ –ì–û–°–¢ –† 7.0.5‚Äì2008."
    )
    bot.send_message(message.chat.id, text, parse_mode='Markdown')

# 4) –û–±—Ä–∞–±–æ—Ç—á–∏–∫ DOI
@bot.message_handler(func=lambda msg: True)
def handle_doi(message):
    doi = message.text.strip()
    try:
        meta = fetch_metadata_by_doi(doi)
    except CrossrefError as e:
        return bot.send_message(message.chat.id, f"‚ùå {e}")

    # –í—ã–±–æ—Ä —à–∞–±–ª–æ–Ω–∞ –ø–æ —Ç–∏–ø—É —Ä–µ—Å—É—Ä—Å–∞
    rtype = meta.get("type", "")
    if rtype == "book":
        desc = format_book(meta)
    elif rtype == "journal-article":
        desc = format_article(meta)
    elif rtype in ("book-chapter", "chapter"):  # –≥–ª–∞–≤–∞ –∫–Ω–∏–≥–∏/—Å–±–æ—Ä–Ω–∏–∫–∞
        desc = format_chapter(meta)
    else:
        desc = format_electronic(meta)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
    bot.send_message(message.chat.id, desc)

# 5) –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    bot.remove_webhook()
    print("Bot is polling...")
    bot.infinity_polling(skip_pending=True)

